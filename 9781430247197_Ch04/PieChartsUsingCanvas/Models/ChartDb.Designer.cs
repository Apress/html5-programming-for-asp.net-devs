//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace PieChartsUsingCanvas.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChartDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChartDbEntities object using the connection string found in the 'ChartDbEntities' section of the application configuration file.
        /// </summary>
        public ChartDbEntities() : base("name=ChartDbEntities", "ChartDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChartDbEntities object.
        /// </summary>
        public ChartDbEntities(string connectionString) : base(connectionString, "ChartDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChartDbEntities object.
        /// </summary>
        public ChartDbEntities(EntityConnection connection) : base(connection, "ChartDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChartDetail> ChartDetails
        {
            get
            {
                if ((_ChartDetails == null))
                {
                    _ChartDetails = base.CreateObjectSet<ChartDetail>("ChartDetails");
                }
                return _ChartDetails;
            }
        }
        private ObjectSet<ChartDetail> _ChartDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChartMaster> ChartMasters
        {
            get
            {
                if ((_ChartMasters == null))
                {
                    _ChartMasters = base.CreateObjectSet<ChartMaster>("ChartMasters");
                }
                return _ChartMasters;
            }
        }
        private ObjectSet<ChartMaster> _ChartMasters;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChartDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChartDetails(ChartDetail chartDetail)
        {
            base.AddObject("ChartDetails", chartDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChartMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChartMasters(ChartMaster chartMaster)
        {
            base.AddObject("ChartMasters", chartMaster);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChartDbModel", Name="ChartDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChartDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChartDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="chartId">Initial value of the ChartId property.</param>
        public static ChartDetail CreateChartDetail(global::System.Int32 id, global::System.Guid chartId)
        {
            ChartDetail chartDetail = new ChartDetail();
            chartDetail.Id = id;
            chartDetail.ChartId = chartId;
            return chartDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectorName
        {
            get
            {
                return _SectorName;
            }
            set
            {
                OnSectorNameChanging(value);
                ReportPropertyChanging("SectorName");
                _SectorName = StructuralObject.SetValidValue(value, true, "SectorName");
                ReportPropertyChanged("SectorName");
                OnSectorNameChanged();
            }
        }
        private global::System.String _SectorName;
        partial void OnSectorNameChanging(global::System.String value);
        partial void OnSectorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SectorValue
        {
            get
            {
                return _SectorValue;
            }
            set
            {
                OnSectorValueChanging(value);
                ReportPropertyChanging("SectorValue");
                _SectorValue = StructuralObject.SetValidValue(value, "SectorValue");
                ReportPropertyChanged("SectorValue");
                OnSectorValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _SectorValue;
        partial void OnSectorValueChanging(Nullable<global::System.Decimal> value);
        partial void OnSectorValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectorColor
        {
            get
            {
                return _SectorColor;
            }
            set
            {
                OnSectorColorChanging(value);
                ReportPropertyChanging("SectorColor");
                _SectorColor = StructuralObject.SetValidValue(value, true, "SectorColor");
                ReportPropertyChanged("SectorColor");
                OnSectorColorChanged();
            }
        }
        private global::System.String _SectorColor;
        partial void OnSectorColorChanging(global::System.String value);
        partial void OnSectorColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChartId
        {
            get
            {
                return _ChartId;
            }
            set
            {
                OnChartIdChanging(value);
                ReportPropertyChanging("ChartId");
                _ChartId = StructuralObject.SetValidValue(value, "ChartId");
                ReportPropertyChanged("ChartId");
                OnChartIdChanged();
            }
        }
        private global::System.Guid _ChartId;
        partial void OnChartIdChanging(global::System.Guid value);
        partial void OnChartIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChartDbModel", Name="ChartMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChartMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChartMaster object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ChartMaster CreateChartMaster(global::System.Guid id)
        {
            ChartMaster chartMaster = new ChartMaster();
            chartMaster.Id = id;
            return chartMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true, "ImageUrl");
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();

        #endregion

    }

    #endregion

}
